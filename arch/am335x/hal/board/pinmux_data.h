/**
 * Note: This file was auto-generated by TI PinMux on 13/11/2015 at 23:56:56.
 *
 * \file  am43xx_gpevm_pinmux_data.c
 *
 * \brief  This file contains the pin mux configurations for the boards.
 *         These are prepared based on how the peripherals are extended on
 *         the boards.
 *
 * \copyright Copyright (CU) 2015 Texas Instruments Incorporated - 
 *             http://www.ti.com/
 */

/**
 *  Redistribution and use in source and binary forms, with or without
 *  modification, are permitted provided that the following conditions
 *  are met:
 *
 *    Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 *    Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the
 *    distribution.
 *
 *    Neither the name of Texas Instruments Incorporated nor the names of
 *    its contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 *  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 *  OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 *  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 *  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 *  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 *  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 *  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 *  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 */

/* ========================================================================== */
/*                             Include Files                                  */
/* ========================================================================== */


#if defined(BUILDCFG_MOD_DEBUGSS)

static pinmuxPerCfg_t gDebugss0PinCfg[] = 
{
	{
		/* My DEBUGSS 1 -> TMS -> C11 */
		PIN_TMS, 0, \
		( \
			PIN_MODE(0) | \
			((PIN_PULL_UD_EN | PIN_RX_ACTIVE) & (~PIN_PULL_TYPE_SEL)) \
		) \
	},
	{
		/* My DEBUGSS 1 -> TDI -> B11 */
		PIN_TDI, 0, \
		( \
			PIN_MODE(0) | \
			((PIN_PULL_UD_EN | PIN_RX_ACTIVE) & (~PIN_PULL_TYPE_SEL)) \
		) \
	},
	{
		/* My DEBUGSS 1 -> TDO -> A11 */
		PIN_TDO, 0, \
		( \
			PIN_MODE(0) | \
			((PIN_PULL_UD_EN) & (~PIN_PULL_TYPE_SEL & ~PIN_RX_ACTIVE)) \
		) \
	},
	{
		/* My DEBUGSS 1 -> TCK -> A12 */
		PIN_TCK, 0, \
		( \
			PIN_MODE(0) | \
			((PIN_PULL_UD_EN | PIN_RX_ACTIVE) & (~PIN_PULL_TYPE_SEL)) \
		) \
	},
	{
		/* My DEBUGSS 1 -> nTRST -> B10 */
		PIN_NTRST, 0, \
		( \
			PIN_MODE(0) | \
			((PIN_PULL_UD_EN | PIN_RX_ACTIVE) & (~PIN_PULL_TYPE_SEL)) \
		) \
	},
	{
		/* My DEBUGSS 1 -> EMU0 -> C14 */
		PIN_EMU0, 0, \
		( \
			PIN_MODE(0) | \
			((PIN_PULL_UD_EN | PIN_RX_ACTIVE) & (~PIN_PULL_TYPE_SEL)) \
		) \
	},
	{
		/* My DEBUGSS 1 -> EMU1 -> B14 */
		PIN_EMU1, 0, \
		( \
			PIN_MODE(0) | \
			((PIN_PULL_UD_EN | PIN_RX_ACTIVE) & (~PIN_PULL_TYPE_SEL)) \
		) \
	},
	{PINMUX_INVALID_PIN}
};

static pinmuxModuleCfg_t gDebugssPinCfg[] = 
{
    {0, TRUE, gDebugss0PinCfg},
    {CHIPDB_INVALID_INSTANCE_NUM}
};

#endif /* if defined(BUILDCFG_MOD_DEBUGSS) */

#if defined(BUILDCFG_MOD_EMIF)

static pinmuxPerCfg_t gEmif4PinCfg[] = 
{
	{PINMUX_INVALID_PIN}
};

static pinmuxModuleCfg_t gEmifPinCfg[] = 
{
    {4, TRUE, gEmif4PinCfg},
    {CHIPDB_INVALID_INSTANCE_NUM}
};

#endif /* if defined(BUILDCFG_MOD_EMIF) */

#if defined(BUILDCFG_MOD_RTC)

static pinmuxPerCfg_t gRtc0PinCfg[] = 
{
	{
		/* My RTC 1 -> RTC_PORz -> B5 */
		PIN_RTC_PORZ, 0, \
		( \
			PIN_MODE(0) | \
			((PIN_PULL_UD_EN | PIN_RX_ACTIVE) & (~PIN_PULL_TYPE_SEL)) \
		) \
	},
	{
		/* My RTC 1 -> EXT_WAKEUP -> C5 */
		PIN_EXT_WAKEUP, 0, \
		( \
			PIN_MODE(0) | \
			((PIN_PULL_UD_EN) & (~PIN_PULL_TYPE_SEL & ~PIN_RX_ACTIVE)) \
		) \
	},
	{
		/* My RTC 1 -> PMIC_POWER_EN -> C6 */
		PIN_PMIC_POWER_EN, 0, \
		( \
			PIN_MODE(0) | \
			((PIN_PULL_UD_EN | PIN_RX_ACTIVE) & (~PIN_PULL_TYPE_SEL)) \
		) \
	},
	{
		/* My RTC 1 -> ENZ_KALDO_1P8V -> B4 */
		PIN_ENZ_KALDO_1P8V, 0, \
		( \
			PIN_MODE(0) | \
			((PIN_PULL_UD_EN | PIN_RX_ACTIVE) & (~PIN_PULL_TYPE_SEL)) \
		) \
	},
	{PINMUX_INVALID_PIN}
};

static pinmuxModuleCfg_t gRtcPinCfg[] = 
{
    {0, TRUE, gRtc0PinCfg},
    {CHIPDB_INVALID_INSTANCE_NUM}
};

#endif /* if defined(BUILDCFG_MOD_RTC) */

#if defined(BUILDCFG_MOD_GPIO)

static pinmuxPerCfg_t gGpio0PinCfg[] = 
{
	{
		/* MyGPIO0 -> gpio0[0] -> M17 */
		PIN_MDIO_DATA, 0, \
		( \
			PIN_MODE(7) | \
			((PIN_PULL_UD_EN | PIN_RX_ACTIVE) & (~PIN_PULL_TYPE_SEL)) \
		) \
	},
	{
		/* MyGPIO0 -> gpio0[1] -> M18 */
		PIN_MDIO_CLK, 1, \
		( \
			PIN_MODE(7) | \
			((PIN_PULL_UD_EN | PIN_RX_ACTIVE) & (~PIN_PULL_TYPE_SEL)) \
		) \
	},
	{
		/* MyGPIO0 -> gpio0[7] -> C18 */
		PIN_ECAP0_IN_PWM0_OUT, 7, \
		( \
			PIN_MODE(7) | \
			((PIN_PULL_UD_EN | PIN_RX_ACTIVE) & (~PIN_PULL_TYPE_SEL)) \
		) \
	},
	{
		/* MyGPIO0 -> gpio0[8] -> V2 */
		PIN_LCD_DATA12, 8, \
		( \
			PIN_MODE(7) | \
			((PIN_PULL_UD_EN | PIN_RX_ACTIVE) & (~PIN_PULL_TYPE_SEL)) \
		) \
	},
	{
		/* MyGPIO0 -> gpio0[9] -> V3 */
		PIN_LCD_DATA13, 9, \
		( \
			PIN_MODE(7) | \
			((PIN_PULL_UD_EN | PIN_RX_ACTIVE) & (~PIN_PULL_TYPE_SEL)) \
		) \
	},
	{
		/* MyGPIO0 -> gpio0[10] -> V4 */
		PIN_LCD_DATA14, 10, \
		( \
			PIN_MODE(7) | \
			((PIN_PULL_UD_EN | PIN_RX_ACTIVE) & (~PIN_PULL_TYPE_SEL)) \
		) \
	},
	{
		/* MyGPIO0 -> gpio0[11] -> T5 */
		PIN_LCD_DATA15, 11, \
		( \
			PIN_MODE(7) | \
			((PIN_PULL_UD_EN | PIN_RX_ACTIVE) & (~PIN_PULL_TYPE_SEL)) \
		) \
	},
	{
		/* MyGPIO0 -> gpio0[12] -> D18 */
		PIN_UART1_CTSN, 12, \
		( \
			PIN_MODE(7) | \
			((PIN_PULL_UD_EN | PIN_RX_ACTIVE) & (~PIN_PULL_TYPE_SEL)) \
		) \
	},
	{
		/* MyGPIO0 -> gpio0[13] -> D17 */
		PIN_UART1_RTSN, 13, \
		( \
			PIN_MODE(7) | \
			((PIN_PULL_UD_EN | PIN_RX_ACTIVE) & (~PIN_PULL_TYPE_SEL)) \
		) \
	},
	{
		/* MyGPIO0 -> gpio0[14] -> D16 */
		PIN_UART1_RXD, 14, \
		( \
			PIN_MODE(7) | \
			((PIN_PULL_UD_EN | PIN_RX_ACTIVE) & (~PIN_PULL_TYPE_SEL)) \
		) \
	},
	{
		/* MyGPIO0 -> gpio0[15] -> D15 */
		PIN_UART1_TXD, 15, \
		( \
			PIN_MODE(7) | \
			((PIN_PULL_UD_EN | PIN_RX_ACTIVE) & (~PIN_PULL_TYPE_SEL)) \
		) \
	},
	{
		/* MyGPIO0 -> gpio0[16] -> J18 */
		PIN_GMII1_TXD3, 16, \
		( \
			PIN_MODE(7) | \
			((PIN_PULL_UD_EN | PIN_RX_ACTIVE) & (~PIN_PULL_TYPE_SEL)) \
		) \
	},
	{
		/* MyGPIO0 -> gpio0[18] -> F16 */
		PIN_USB0_DRVVBUS, 18, \
		( \
			PIN_MODE(7) | \
			((PIN_PULL_UD_EN | PIN_RX_ACTIVE) & (~PIN_PULL_TYPE_SEL)) \
		) \
	},
	{
		/* MyGPIO0 -> gpio0[19] -> A15 */
		PIN_XDMA_EVENT_INTR0, 19, \
		( \
			PIN_MODE(7) | \
			((PIN_PULL_UD_EN | PIN_RX_ACTIVE) & (~PIN_PULL_TYPE_SEL)) \
		) \
	},
	{
		/* MyGPIO0 -> gpio0[20] -> D14 */
		PIN_XDMA_EVENT_INTR1, 20, \
		( \
			PIN_MODE(7) | \
			((PIN_PULL_UD_EN | PIN_RX_ACTIVE) & (~PIN_PULL_TYPE_SEL)) \
		) \
	},
	{
		/* MyGPIO0 -> gpio0[21] -> K16 */
		PIN_GMII1_TXD1, 21, \
		( \
			PIN_MODE(7) | \
			((PIN_PULL_UD_EN | PIN_RX_ACTIVE) & (~PIN_PULL_TYPE_SEL)) \
		) \
	},
	{
		/* MyGPIO0 -> gpio0[22] -> U10 */
		PIN_GPMC_AD8, 22, \
		( \
			PIN_MODE(7) | \
			((PIN_PULL_UD_EN | PIN_RX_ACTIVE) & (~PIN_PULL_TYPE_SEL)) \
		) \
	},
	{
		/* MyGPIO0 -> gpio0[23] -> T10 */
		PIN_GPMC_AD9, 23, \
		( \
			PIN_MODE(7) | \
			((PIN_PULL_UD_EN | PIN_RX_ACTIVE) & (~PIN_PULL_TYPE_SEL)) \
		) \
	},
	{
		/* MyGPIO0 -> gpio0[26] -> T11 */
		PIN_GPMC_AD10, 26, \
		( \
			PIN_MODE(7) | \
			((PIN_PULL_UD_EN | PIN_RX_ACTIVE) & (~PIN_PULL_TYPE_SEL)) \
		) \
	},
	{
		/* MyGPIO0 -> gpio0[27] -> U12 */
		PIN_GPMC_AD11, 27, \
		( \
			PIN_MODE(7) | \
			((PIN_PULL_UD_EN | PIN_RX_ACTIVE) & (~PIN_PULL_TYPE_SEL)) \
		) \
	},
	{
		/* MyGPIO0 -> gpio0[28] -> K17 */
		PIN_GMII1_TXD0, 28, \
		( \
			PIN_MODE(7) | \
			((PIN_PULL_UD_EN | PIN_RX_ACTIVE) & (~PIN_PULL_TYPE_SEL)) \
		) \
	},
	{
		/* MyGPIO0 -> gpio0[29] -> H18 */
		PIN_RMII1_REFCLK, 29, \
		( \
			PIN_MODE(7) | \
			((PIN_PULL_UD_EN | PIN_RX_ACTIVE) & (~PIN_PULL_TYPE_SEL)) \
		) \
	},
	{
		/* MyGPIO0 -> gpio0[30] -> T17 */
		PIN_GPMC_WAIT0, 30, \
		( \
			PIN_MODE(7) | \
			((PIN_PULL_UD_EN | PIN_RX_ACTIVE) & (~PIN_PULL_TYPE_SEL)) \
		) \
	},
	{
		/* MyGPIO0 -> gpio0[31] -> U17 */
		PIN_GPMC_WPN, 31, \
		( \
			PIN_MODE(7) | \
			((PIN_PULL_UD_EN | PIN_RX_ACTIVE) & (~PIN_PULL_TYPE_SEL)) \
		) \
	},
	{PINMUX_INVALID_PIN}
};

static pinmuxPerCfg_t gGpio1PinCfg[] = 
{
	{
		/* MyGPIO1 -> gpio1[4] -> U8 */
		PIN_GPMC_AD4, 4, \
		( \
			PIN_MODE(7) | \
			((PIN_PULL_UD_EN | PIN_RX_ACTIVE) & (~PIN_PULL_TYPE_SEL)) \
		) \
	},
	{
		/* MyGPIO1 -> gpio1[5] -> V8 */
		PIN_GPMC_AD5, 5, \
		( \
			PIN_MODE(7) | \
			((PIN_PULL_UD_EN | PIN_RX_ACTIVE) & (~PIN_PULL_TYPE_SEL)) \
		) \
	},
	{
		/* MyGPIO1 -> gpio1[6] -> R9 */
		PIN_GPMC_AD6, 6, \
		( \
			PIN_MODE(7) | \
			((PIN_PULL_UD_EN | PIN_RX_ACTIVE) & (~PIN_PULL_TYPE_SEL)) \
		) \
	},
	{
		/* MyGPIO1 -> gpio1[7] -> T9 */
		PIN_GPMC_AD7, 7, \
		( \
			PIN_MODE(7) | \
			((PIN_PULL_UD_EN | PIN_RX_ACTIVE) & (~PIN_PULL_TYPE_SEL)) \
		) \
	},
	{
		/* MyGPIO1 -> gpio1[8] -> E18 */
		PIN_UART0_CTSN, 8, \
		( \
			PIN_MODE(7) | \
			((PIN_PULL_UD_EN | PIN_RX_ACTIVE) & (~PIN_PULL_TYPE_SEL)) \
		) \
	},
	{
		/* MyGPIO1 -> gpio1[12] -> T12 */
		PIN_GPMC_AD12, 12, \
		( \
			PIN_MODE(7) | \
			((PIN_PULL_UD_EN | PIN_RX_ACTIVE) & (~PIN_PULL_TYPE_SEL)) \
		) \
	},
	{
		/* MyGPIO1 -> gpio1[13] -> R12 */
		PIN_GPMC_AD13, 13, \
		( \
			PIN_MODE(7) | \
			((PIN_PULL_UD_EN | PIN_RX_ACTIVE) & (~PIN_PULL_TYPE_SEL)) \
		) \
	},
	{
		/* MyGPIO1 -> gpio1[14] -> V13 */
		PIN_GPMC_AD14, 14, \
		( \
			PIN_MODE(7) | \
			((PIN_PULL_UD_EN | PIN_RX_ACTIVE) & (~PIN_PULL_TYPE_SEL)) \
		) \
	},
	{
		/* MyGPIO1 -> gpio1[15] -> U13 */
		PIN_GPMC_AD15, 15, \
		( \
			PIN_MODE(7) | \
			((PIN_PULL_UD_EN | PIN_RX_ACTIVE) & (~PIN_PULL_TYPE_SEL)) \
		) \
	},
	{
		/* MyGPIO1 -> gpio1[16] -> R13 */
		PIN_GPMC_A0, 16, \
		( \
			PIN_MODE(7) | \
			((PIN_PULL_UD_EN | PIN_RX_ACTIVE) & (~PIN_PULL_TYPE_SEL)) \
		) \
	},
	{
		/* MyGPIO1 -> gpio1[17] -> V14 */
		PIN_GPMC_A1, 17, \
		( \
			PIN_MODE(7) | \
			((PIN_PULL_UD_EN | PIN_RX_ACTIVE) & (~PIN_PULL_TYPE_SEL)) \
		) \
	},
	{
		/* MyGPIO1 -> gpio1[18] -> U14 */
		PIN_GPMC_A2, 18, \
		( \
			PIN_MODE(7) | \
			((PIN_PULL_UD_EN | PIN_RX_ACTIVE) & (~PIN_PULL_TYPE_SEL)) \
		) \
	},
	{
		/* MyGPIO1 -> gpio1[19] -> T14 */
		PIN_GPMC_A3, 19, \
		( \
			PIN_MODE(7) | \
			((PIN_PULL_UD_EN | PIN_RX_ACTIVE) & (~PIN_PULL_TYPE_SEL)) \
		) \
	},
	{
		/* MyGPIO1 -> gpio1[20] -> R14 */
		PIN_GPMC_A4, 20, \
		( \
			PIN_MODE(7) | \
			((PIN_PULL_UD_EN | PIN_RX_ACTIVE) & (~PIN_PULL_TYPE_SEL)) \
		) \
	},
	{
		/* MyGPIO1 -> gpio1[21] -> V15 */
		PIN_GPMC_A5, 21, \
		( \
			PIN_MODE(7) | \
			((PIN_PULL_UD_EN | PIN_RX_ACTIVE) & (~PIN_PULL_TYPE_SEL)) \
		) \
	},
	{
		/* MyGPIO1 -> gpio1[22] -> U15 */
		PIN_GPMC_A6, 22, \
		( \
			PIN_MODE(7) | \
			((PIN_PULL_UD_EN | PIN_RX_ACTIVE) & (~PIN_PULL_TYPE_SEL)) \
		) \
	},
	{
		/* MyGPIO1 -> gpio1[23] -> T15 */
		PIN_GPMC_A7, 23, \
		( \
			PIN_MODE(7) | \
			((PIN_PULL_UD_EN | PIN_RX_ACTIVE) & (~PIN_PULL_TYPE_SEL)) \
		) \
	},
	{
		/* MyGPIO1 -> gpio1[24] -> V16 */
		PIN_GPMC_A8, 24, \
		( \
			PIN_MODE(7) | \
			((PIN_PULL_UD_EN | PIN_RX_ACTIVE) & (~PIN_PULL_TYPE_SEL)) \
		) \
	},
	{
		/* MyGPIO1 -> gpio1[25] -> U16 */
		PIN_GPMC_A9, 25, \
		( \
			PIN_MODE(7) | \
			((PIN_PULL_UD_EN | PIN_RX_ACTIVE) & (~PIN_PULL_TYPE_SEL)) \
		) \
	},
	{
		/* MyGPIO1 -> gpio1[26] -> T16 */
		PIN_GPMC_A10, 26, \
		( \
			PIN_MODE(7) | \
			((PIN_PULL_UD_EN | PIN_RX_ACTIVE) & (~PIN_PULL_TYPE_SEL)) \
		) \
	},
	{
		/* MyGPIO1 -> gpio1[27] -> V17 */
		PIN_GPMC_A11, 27, \
		( \
			PIN_MODE(7) | \
			((PIN_PULL_UD_EN | PIN_RX_ACTIVE) & (~PIN_PULL_TYPE_SEL)) \
		) \
	},
	{
		/* MyGPIO1 -> gpio1[28] -> U18 */
		PIN_GPMC_BE1N, 28, \
		( \
			PIN_MODE(7) | \
			((PIN_PULL_UD_EN | PIN_RX_ACTIVE) & (~PIN_PULL_TYPE_SEL)) \
		) \
	},
	{
		/* MyGPIO1 -> gpio1[29] -> V6 */
		PIN_GPMC_CSN0, 29, \
		( \
			PIN_MODE(7) | \
			((PIN_PULL_UD_EN | PIN_RX_ACTIVE) & (~PIN_PULL_TYPE_SEL)) \
		) \
	},
	{PINMUX_INVALID_PIN}
};

static pinmuxPerCfg_t gGpio3PinCfg[] = 
{
	{
		/* MyGPIO2 -> gpio3[0] -> H16 */
		PIN_GMII1_COL, 0, \
		( \
			PIN_MODE(7) | \
			((PIN_PULL_UD_EN | PIN_RX_ACTIVE) & (~PIN_PULL_TYPE_SEL)) \
		) \
	},
	{
		/* MyGPIO2 -> gpio3[1] -> H17 */
		PIN_GMII1_CRS, 1, \
		( \
			PIN_MODE(7) | \
			((PIN_PULL_UD_EN | PIN_RX_ACTIVE) & (~PIN_PULL_TYPE_SEL)) \
		) \
	},
	{
		/* MyGPIO2 -> gpio3[2] -> J15 */
		PIN_GMII1_RXER, 2, \
		( \
			PIN_MODE(7) | \
			((PIN_PULL_UD_EN | PIN_RX_ACTIVE) & (~PIN_PULL_TYPE_SEL)) \
		) \
	},
	{
		/* MyGPIO2 -> gpio3[3] -> J16 */
		PIN_GMII1_TXEN, 3, \
		( \
			PIN_MODE(7) | \
			((PIN_PULL_UD_EN | PIN_RX_ACTIVE) & (~PIN_PULL_TYPE_SEL)) \
		) \
	},
	{
		/* MyGPIO2 -> gpio3[4] -> J17 */
		PIN_GMII1_RXDV, 4, \
		( \
			PIN_MODE(7) | \
			((PIN_PULL_UD_EN | PIN_RX_ACTIVE) & (~PIN_PULL_TYPE_SEL)) \
		) \
	},
	{
		/* MyGPIO2 -> gpio3[5] -> C17 */
		PIN_I2C0_SDA, 5, \
		( \
			PIN_MODE(7) | \
			((PIN_PULL_UD_EN | PIN_RX_ACTIVE) & (~PIN_PULL_TYPE_SEL)) \
		) \
	},
	{
		/* MyGPIO2 -> gpio3[6] -> C16 */
		PIN_I2C0_SCL, 6, \
		( \
			PIN_MODE(7) | \
			((PIN_PULL_UD_EN | PIN_RX_ACTIVE) & (~PIN_PULL_TYPE_SEL)) \
		) \
	},
	{
		/* MyGPIO2 -> gpio3[13] -> F15 */
		PIN_USB1_DRVVBUS, 13, \
		( \
			PIN_MODE(7) | \
			((PIN_PULL_UD_EN | PIN_RX_ACTIVE) & (~PIN_PULL_TYPE_SEL)) \
		) \
	},
	{
		/* MyGPIO2 -> gpio3[17] -> C12 */
		PIN_MCASP0_AHCLKR, 17, \
		( \
			PIN_MODE(7) | \
			((PIN_PULL_UD_EN | PIN_RX_ACTIVE) & (~PIN_PULL_TYPE_SEL)) \
		) \
	},
	{
		/* MyGPIO2 -> gpio3[20] -> D13 */
		PIN_MCASP0_AXR1, 20, \
		( \
			PIN_MODE(7) | \
			((PIN_PULL_UD_EN | PIN_RX_ACTIVE) & (~PIN_PULL_TYPE_SEL)) \
		) \
	},
	{
		/* MyGPIO2 -> gpio3[21] -> A14 */
		PIN_MCASP0_AHCLKX, 21, \
		( \
			PIN_MODE(7) | \
			((PIN_PULL_UD_EN | PIN_RX_ACTIVE) & (~PIN_PULL_TYPE_SEL)) \
		) \
	},
	{PINMUX_INVALID_PIN}
};

static pinmuxPerCfg_t gGpio2PinCfg[] = 
{
	{
		/* MyGPIO3 -> gpio2[0] -> T13 */
		PIN_GPMC_CSN3, 0, \
		( \
			PIN_MODE(7) | \
			((PIN_PULL_UD_EN | PIN_RX_ACTIVE) & (~PIN_PULL_TYPE_SEL)) \
		) \
	},
	{
		/* MyGPIO3 -> gpio2[2] -> R7 */
		PIN_GPMC_ADVN_ALE, 2, \
		( \
			PIN_MODE(7) | \
			((PIN_PULL_UD_EN | PIN_RX_ACTIVE) & (~PIN_PULL_TYPE_SEL)) \
		) \
	},
	{
		/* MyGPIO3 -> gpio2[3] -> T7 */
		PIN_GPMC_OEN_REN, 3, \
		( \
			PIN_MODE(7) | \
			((PIN_PULL_UD_EN | PIN_RX_ACTIVE) & (~PIN_PULL_TYPE_SEL)) \
		) \
	},
	{
		/* MyGPIO3 -> gpio2[4] -> U6 */
		PIN_GPMC_WEN, 4, \
		( \
			PIN_MODE(7) | \
			((PIN_PULL_UD_EN | PIN_RX_ACTIVE) & (~PIN_PULL_TYPE_SEL)) \
		) \
	},
	{
		/* MyGPIO3 -> gpio2[5] -> T6 */
		PIN_GPMC_BE0N_CLE, 5, \
		( \
			PIN_MODE(7) | \
			((PIN_PULL_UD_EN | PIN_RX_ACTIVE) & (~PIN_PULL_TYPE_SEL)) \
		) \
	},
	{
		/* MyGPIO3 -> gpio2[14] -> U1 */
		PIN_LCD_DATA8, 14, \
		( \
			PIN_MODE(7) | \
			((PIN_PULL_UD_EN | PIN_RX_ACTIVE) & (~PIN_PULL_TYPE_SEL)) \
		) \
	},
	{
		/* MyGPIO3 -> gpio2[15] -> U2 */
		PIN_LCD_DATA9, 15, \
		( \
			PIN_MODE(7) | \
			((PIN_PULL_UD_EN | PIN_RX_ACTIVE) & (~PIN_PULL_TYPE_SEL)) \
		) \
	},
	{
		/* MyGPIO3 -> gpio2[16] -> U3 */
		PIN_LCD_DATA10, 16, \
		( \
			PIN_MODE(7) | \
			((PIN_PULL_UD_EN | PIN_RX_ACTIVE) & (~PIN_PULL_TYPE_SEL)) \
		) \
	},
	{
		/* MyGPIO3 -> gpio2[17] -> U4 */
		PIN_LCD_DATA11, 17, \
		( \
			PIN_MODE(7) | \
			((PIN_PULL_UD_EN | PIN_RX_ACTIVE) & (~PIN_PULL_TYPE_SEL)) \
		) \
	},
	{
		/* MyGPIO3 -> gpio2[19] -> L16 */
		PIN_GMII1_RXD2, 19, \
		( \
			PIN_MODE(7) | \
			((PIN_PULL_UD_EN | PIN_RX_ACTIVE) & (~PIN_PULL_TYPE_SEL)) \
		) \
	},
	{
		/* MyGPIO3 -> gpio2[20] -> L15 */
		PIN_GMII1_RXD1, 20, \
		( \
			PIN_MODE(7) | \
			((PIN_PULL_UD_EN | PIN_RX_ACTIVE) & (~PIN_PULL_TYPE_SEL)) \
		) \
	},
	{
		/* MyGPIO3 -> gpio2[21] -> M16 */
		PIN_GMII1_RXD0, 21, \
		( \
			PIN_MODE(7) | \
			((PIN_PULL_UD_EN | PIN_RX_ACTIVE) & (~PIN_PULL_TYPE_SEL)) \
		) \
	},
	{PINMUX_INVALID_PIN}
};

static pinmuxModuleCfg_t gGpioPinCfg[] = 
{
    {0, TRUE, gGpio0PinCfg},
    {1, TRUE, gGpio1PinCfg},
    {3, TRUE, gGpio3PinCfg},
    {2, TRUE, gGpio2PinCfg},
    {CHIPDB_INVALID_INSTANCE_NUM}
};

#endif /* if defined(BUILDCFG_MOD_GPIO) */

#if defined(BUILDCFG_MOD_ADC)

static pinmuxPerCfg_t gAdc0PinCfg[] = 
{
	{PINMUX_INVALID_PIN}
};

static pinmuxModuleCfg_t gAdcPinCfg[] = 
{
    {0, TRUE, gAdc0PinCfg},
    {CHIPDB_INVALID_INSTANCE_NUM}
};

#endif /* if defined(BUILDCFG_MOD_ADC) */

#if defined(BUILDCFG_MOD_MCASP)

static pinmuxPerCfg_t gMcasp0PinCfg[] = 
{
	{
		/* My MCASP 0 -> mcasp0_ahclkx -> K15 */
		PIN_GMII1_TXD2, 0, \
		( \
			PIN_MODE(6) | \
			((PIN_PULL_UD_EN | PIN_RX_ACTIVE) & (~PIN_PULL_TYPE_SEL)) \
		) \
	},
	{
		/* My MCASP 0 -> mcasp0_aclkx -> K18 */
		PIN_GMII1_TXCLK, 0, \
		( \
			PIN_MODE(6) | \
			((PIN_PULL_UD_EN | PIN_RX_ACTIVE) & (~PIN_PULL_TYPE_SEL)) \
		) \
	},
	{
		/* My MCASP 0 -> mcasp0_fsx -> L18 */
		PIN_GMII1_RXCLK, 0, \
		( \
			PIN_MODE(6) | \
			((PIN_PULL_UD_EN | PIN_RX_ACTIVE) & (~PIN_PULL_TYPE_SEL)) \
		) \
	},
	{
		/* My MCASP 0 -> mcasp0_axr0 -> L17 */
		PIN_GMII1_RXD3, 0, \
		( \
			PIN_MODE(6) | \
			((PIN_PULL_UD_EN | PIN_RX_ACTIVE) & (~PIN_PULL_TYPE_SEL)) \
		) \
	},
	{PINMUX_INVALID_PIN}
};

static pinmuxModuleCfg_t gMcaspPinCfg[] = 
{
    {0, TRUE, gMcasp0PinCfg},
    {CHIPDB_INVALID_INSTANCE_NUM}
};

#endif /* if defined(BUILDCFG_MOD_MCASP) */

#if defined(BUILDCFG_MOD_GLUE)

static pinmuxPerCfg_t gGlue0PinCfg[] = 
{
	{
		/* MyGLUE1 -> nRESETIN_OUT -> A10 */
		PIN_NRESETIN_OUT, 0, \
		( \
			PIN_MODE(0) | \
			((PIN_PULL_UD_EN | PIN_RX_ACTIVE) & (~PIN_PULL_TYPE_SEL)) \
		) \
	},
	{
		/* MyGLUE1 -> nNMI -> B18 */
		PIN_NNMI, 0, \
		( \
			PIN_MODE(0) | \
			((PIN_PULL_UD_EN | PIN_RX_ACTIVE) & (~PIN_PULL_TYPE_SEL)) \
		) \
	},
	{PINMUX_INVALID_PIN}
};

static pinmuxModuleCfg_t gGluePinCfg[] = 
{
    {0, TRUE, gGlue0PinCfg},
    {CHIPDB_INVALID_INSTANCE_NUM}
};

#endif /* if defined(BUILDCFG_MOD_GLUE) */

#if defined(BUILDCFG_MOD_TEST)

static pinmuxPerCfg_t gTest0PinCfg[] = 
{
	{PINMUX_INVALID_PIN}
};

static pinmuxModuleCfg_t gTestPinCfg[] = 
{
    {0, TRUE, gTest0PinCfg},
    {CHIPDB_INVALID_INSTANCE_NUM}
};

#endif /* if defined(BUILDCFG_MOD_TEST) */

#if defined(BUILDCFG_MOD_OSC)

static pinmuxPerCfg_t gOsc1PinCfg[] = 
{
	{PINMUX_INVALID_PIN}
};

static pinmuxPerCfg_t gOsc0PinCfg[] = 
{
	{PINMUX_INVALID_PIN}
};

static pinmuxModuleCfg_t gOscPinCfg[] = 
{
    {1, TRUE, gOsc1PinCfg},
    {0, TRUE, gOsc0PinCfg},
    {CHIPDB_INVALID_INSTANCE_NUM}
};

#endif /* if defined(BUILDCFG_MOD_OSC) */

#if defined(BUILDCFG_MOD_LCDC)

static pinmuxPerCfg_t gLcdc0PinCfg[] = 
{
	{
		/* My LCDC 1 -> lcd_vsync -> U5 */
		PIN_LCD_VSYNC, 0, \
		( \
			PIN_MODE(0) | \
			((PIN_PULL_UD_EN) & (~PIN_PULL_TYPE_SEL & ~PIN_RX_ACTIVE)) \
		) \
	},
	{
		/* My LCDC 1 -> lcd_hsync -> R5 */
		PIN_LCD_HSYNC, 0, \
		( \
			PIN_MODE(0) | \
			((PIN_PULL_UD_EN) & (~PIN_PULL_TYPE_SEL & ~PIN_RX_ACTIVE)) \
		) \
	},
	{
		/* My LCDC 1 -> lcd_pclk -> V5 */
		PIN_LCD_PCLK, 0, \
		( \
			PIN_MODE(0) | \
			((PIN_PULL_UD_EN) & (~PIN_PULL_TYPE_SEL & ~PIN_RX_ACTIVE)) \
		) \
	},
	{
		/* My LCDC 1 -> lcd_ac_bias_en -> R6 */
		PIN_LCD_AC_BIAS_EN, 0, \
		( \
			PIN_MODE(0) | \
			((PIN_PULL_UD_EN) & (~PIN_PULL_TYPE_SEL & ~PIN_RX_ACTIVE)) \
		) \
	},
	{
		/* My LCDC 1 -> lcd_memory_clk -> V12 */
		PIN_GPMC_CLK, 0, \
		( \
			PIN_MODE(1) | \
			((PIN_PULL_UD_EN) & (~PIN_PULL_TYPE_SEL & ~PIN_RX_ACTIVE)) \
		) \
	},
	{
		/* My LCDC 1 -> lcd_data0 -> R1 */
		PIN_LCD_DATA0, 0, \
		( \
			PIN_MODE(0) | \
			((PIN_PULL_UD_EN) & (~PIN_PULL_TYPE_SEL & ~PIN_RX_ACTIVE)) \
		) \
	},
	{
		/* My LCDC 1 -> lcd_data1 -> R2 */
		PIN_LCD_DATA1, 0, \
		( \
			PIN_MODE(0) | \
			((PIN_PULL_UD_EN) & (~PIN_PULL_TYPE_SEL & ~PIN_RX_ACTIVE)) \
		) \
	},
	{
		/* My LCDC 1 -> lcd_data2 -> R3 */
		PIN_LCD_DATA2, 0, \
		( \
			PIN_MODE(0) | \
			((PIN_PULL_UD_EN) & (~PIN_PULL_TYPE_SEL & ~PIN_RX_ACTIVE)) \
		) \
	},
	{
		/* My LCDC 1 -> lcd_data3 -> R4 */
		PIN_LCD_DATA3, 0, \
		( \
			PIN_MODE(0) | \
			((PIN_PULL_UD_EN) & (~PIN_PULL_TYPE_SEL & ~PIN_RX_ACTIVE)) \
		) \
	},
	{
		/* My LCDC 1 -> lcd_data4 -> T1 */
		PIN_LCD_DATA4, 0, \
		( \
			PIN_MODE(0) | \
			((PIN_PULL_UD_EN) & (~PIN_PULL_TYPE_SEL & ~PIN_RX_ACTIVE)) \
		) \
	},
	{
		/* My LCDC 1 -> lcd_data5 -> T2 */
		PIN_LCD_DATA5, 0, \
		( \
			PIN_MODE(0) | \
			((PIN_PULL_UD_EN) & (~PIN_PULL_TYPE_SEL & ~PIN_RX_ACTIVE)) \
		) \
	},
	{
		/* My LCDC 1 -> lcd_data6 -> T3 */
		PIN_LCD_DATA6, 0, \
		( \
			PIN_MODE(0) | \
			((PIN_PULL_UD_EN) & (~PIN_PULL_TYPE_SEL & ~PIN_RX_ACTIVE)) \
		) \
	},
	{
		/* My LCDC 1 -> lcd_data7 -> T4 */
		PIN_LCD_DATA7, 0, \
		( \
			PIN_MODE(0) | \
			((PIN_PULL_UD_EN) & (~PIN_PULL_TYPE_SEL & ~PIN_RX_ACTIVE)) \
		) \
	},
	{PINMUX_INVALID_PIN}
};

static pinmuxModuleCfg_t gLcdcPinCfg[] = 
{
    {0, TRUE, gLcdc0PinCfg},
    {CHIPDB_INVALID_INSTANCE_NUM}
};

#endif /* if defined(BUILDCFG_MOD_LCDC) */

#if defined(BUILDCFG_MOD_PWMSS)

/*	((PIN_PULL_UD_EN | PIN_RX_ACTIVE) & (~PIN_PULL_TYPE_SEL)) */

static pinmuxPerCfg_t gPwmss0PinCfg[] = 
{
	{
		/* My eQEP 0 -> eQEP0A_in -> B12 */
		PIN_MCASP0_ACLKR, (uint16_t)PINMUX_SS_PWMSS_EQEP0, \
		( \
			PIN_MODE(1) | \
			(PIN_PULL_TYPE_SEL | PIN_RX_ACTIVE)  \
		) \
	},
	{
		/* My eQEP 0 -> eQEP0B_in -> C13 */
		PIN_MCASP0_FSR, (uint16_t)PINMUX_SS_PWMSS_EQEP0, \
		( \
			PIN_MODE(1) | \
			(PIN_PULL_TYPE_SEL | PIN_RX_ACTIVE)  \
		) \
	},
	{PINMUX_INVALID_PIN}
};

static pinmuxModuleCfg_t gPwmssPinCfg[] = 
{
    {0, TRUE, gPwmss0PinCfg},
    {CHIPDB_INVALID_INSTANCE_NUM}
};

#endif /* if defined(BUILDCFG_MOD_PWMSS) */

#if defined(BUILDCFG_MOD_MMCSD)

static pinmuxPerCfg_t gMmcsd0PinCfg[] = 
{
	{
		/* MMC on SOM -> mmc0_clk -> G17 */
		PIN_MMC0_CLK, 0, \
		( \
			PIN_MODE(0) | \
			((PIN_PULL_UD_EN | PIN_RX_ACTIVE) & (~PIN_PULL_TYPE_SEL)) \
		) \
	},
	{
		/* MMC on SOM -> mmc0_cmd -> G18 */
		PIN_MMC0_CMD, 0, \
		( \
			PIN_MODE(0) | \
			((PIN_PULL_UD_EN | PIN_RX_ACTIVE) & (~PIN_PULL_TYPE_SEL)) \
		) \
	},
	{
		/* MMC on SOM -> mmc0_dat0 -> G16 */
		PIN_MMC0_DAT0, 0, \
		( \
			PIN_MODE(0) | \
			((PIN_PULL_UD_EN | PIN_RX_ACTIVE) & (~PIN_PULL_TYPE_SEL)) \
		) \
	},
	{
		/* MMC on SOM -> mmc0_dat1 -> G15 */
		PIN_MMC0_DAT1, 0, \
		( \
			PIN_MODE(0) | \
			((PIN_PULL_UD_EN | PIN_RX_ACTIVE) & (~PIN_PULL_TYPE_SEL)) \
		) \
	},
	{
		/* MMC on SOM -> mmc0_dat2 -> F18 */
		PIN_MMC0_DAT2, 0, \
		( \
			PIN_MODE(0) | \
			((PIN_PULL_UD_EN | PIN_RX_ACTIVE) & (~PIN_PULL_TYPE_SEL)) \
		) \
	},
	{
		/* MMC on SOM -> mmc0_dat3 -> F17 */
		PIN_MMC0_DAT3, 0, \
		( \
			PIN_MODE(0) | \
			((PIN_PULL_UD_EN | PIN_RX_ACTIVE) & (~PIN_PULL_TYPE_SEL)) \
		) \
	},
	{
		/* MMC on SOM -> mmc0_sdcd -> C15 */
		PIN_SPI0_CS1, 0, \
		( \
			PIN_MODE(5) | \
			((PIN_PULL_UD_EN | PIN_RX_ACTIVE) & (~PIN_PULL_TYPE_SEL)) \
		) \
	},
	{PINMUX_INVALID_PIN}
};

static pinmuxPerCfg_t gMmcsd1PinCfg[] = 
{
	{
		/* My MMC 1 -> mmc1_clk -> U9 */
		PIN_GPMC_CSN1, 0, \
		( \
			PIN_MODE(2) | \
			((PIN_PULL_UD_EN | PIN_RX_ACTIVE) & (~PIN_PULL_TYPE_SEL)) \
		) \
	},
	{
		/* My MMC 1 -> mmc1_cmd -> V9 */
		PIN_GPMC_CSN2, 0, \
		( \
			PIN_MODE(2) | \
			((PIN_PULL_UD_EN | PIN_RX_ACTIVE) & (~PIN_PULL_TYPE_SEL)) \
		) \
	},
	{
		/* My MMC 1 -> mmc1_dat0 -> U7 */
		PIN_GPMC_AD0, 0, \
		( \
			PIN_MODE(1) | \
			((PIN_PULL_UD_EN | PIN_RX_ACTIVE) & (~PIN_PULL_TYPE_SEL)) \
		) \
	},
	{
		/* My MMC 1 -> mmc1_dat1 -> V7 */
		PIN_GPMC_AD1, 0, \
		( \
			PIN_MODE(1) | \
			((PIN_PULL_UD_EN | PIN_RX_ACTIVE) & (~PIN_PULL_TYPE_SEL)) \
		) \
	},
	{
		/* My MMC 1 -> mmc1_dat2 -> R8 */
		PIN_GPMC_AD2, 0, \
		( \
			PIN_MODE(1) | \
			((PIN_PULL_UD_EN | PIN_RX_ACTIVE) & (~PIN_PULL_TYPE_SEL)) \
		) \
	},
	{
		/* My MMC 1 -> mmc1_dat3 -> T8 */
		PIN_GPMC_AD3, 0, \
		( \
			PIN_MODE(1) | \
			((PIN_PULL_UD_EN | PIN_RX_ACTIVE) & (~PIN_PULL_TYPE_SEL)) \
		) \
	},
	{PINMUX_INVALID_PIN}
};

static pinmuxModuleCfg_t gMmcsdPinCfg[] = 
{
    {0, TRUE, gMmcsd0PinCfg},
    {1, TRUE, gMmcsd1PinCfg},
    {CHIPDB_INVALID_INSTANCE_NUM}
};

#endif /* if defined(BUILDCFG_MOD_MMCSD) */

#if defined(BUILDCFG_MOD_USB)

static pinmuxPerCfg_t gUsb0PinCfg[] = 
{
	{PINMUX_INVALID_PIN}
};

static pinmuxModuleCfg_t gUsbPinCfg[] = 
{
    {0, TRUE, gUsb0PinCfg},
    {CHIPDB_INVALID_INSTANCE_NUM}
};

#endif /* if defined(BUILDCFG_MOD_USB) */

#if defined(BUILDCFG_MOD_SPI)

static pinmuxPerCfg_t gSpi0PinCfg[] = 
{
	{
		/* My SPI 0 -> spi0_sclk -> A17 */
		PIN_SPI0_SCLK, 0, \
		( \
			PIN_MODE(0) | \
			((PIN_PULL_UD_EN | PIN_RX_ACTIVE) & (~PIN_PULL_TYPE_SEL)) \
		) \
	},
	{
		/* My SPI 0 -> spi0_d0 -> B17 */
		PIN_SPI0_D0, 0, \
		( \
			PIN_MODE(0) | \
			((PIN_PULL_UD_EN | PIN_RX_ACTIVE) & (~PIN_PULL_TYPE_SEL)) \
		) \
	},
	{
		/* My SPI 0 -> spi0_d1 -> B16 */
		PIN_SPI0_D1, 0, \
		( \
			PIN_MODE(0) | \
			((PIN_PULL_UD_EN | PIN_RX_ACTIVE) & (~PIN_PULL_TYPE_SEL)) \
		) \
	},
	{
		/* My SPI 0 -> spi0_cs0 -> A16 */
		PIN_SPI0_CS0, 0, \
		( \
			PIN_MODE(0) | \
			((PIN_PULL_UD_EN) & (~PIN_PULL_TYPE_SEL & ~PIN_RX_ACTIVE)) \
		) \
	},
	{PINMUX_INVALID_PIN}
};

static pinmuxPerCfg_t gSpi1PinCfg[] = 
{
	{
		/* My SPI 1 -> spi1_sclk -> A13 */
		PIN_MCASP0_ACLKX, 0, \
		( \
			PIN_MODE(3) | \
			((PIN_PULL_UD_EN | PIN_RX_ACTIVE) & (~PIN_PULL_TYPE_SEL)) \
		) \
	},
	{
		/* My SPI 1 -> spi1_d0 -> B13 */
		PIN_MCASP0_FSX, 0, \
		( \
			PIN_MODE(3) | \
			((PIN_PULL_UD_EN | PIN_RX_ACTIVE) & (~PIN_PULL_TYPE_SEL)) \
		) \
	},
	{
		/* My SPI 1 -> spi1_d1 -> D12 */
		PIN_MCASP0_AXR0, 0, \
		( \
			PIN_MODE(3) | \
			((PIN_PULL_UD_EN | PIN_RX_ACTIVE) & (~PIN_PULL_TYPE_SEL)) \
		) \
	},
	{
		/* My SPI 1 -> spi1_cs0 -> E17 */
		PIN_UART0_RTSN, 0, \
		( \
			PIN_MODE(5) | \
			((PIN_PULL_UD_EN) & (~PIN_PULL_TYPE_SEL & ~PIN_RX_ACTIVE)) \
		) \
	},
	{PINMUX_INVALID_PIN}
};

static pinmuxModuleCfg_t gSpiPinCfg[] = 
{
    {0, TRUE, gSpi0PinCfg},
    {1, TRUE, gSpi1PinCfg},
    {CHIPDB_INVALID_INSTANCE_NUM}
};

#endif /* if defined(BUILDCFG_MOD_SPI) */

#if defined(BUILDCFG_MOD_UART)

static pinmuxPerCfg_t gUart0PinCfg[] = 
{
	{
		/* UART0 -> uart0_rxd -> E15 */
		PIN_UART0_RXD, 0, \
		( \
			PIN_MODE(0) | \
			((PIN_PULL_UD_EN | PIN_RX_ACTIVE) & (~PIN_PULL_TYPE_SEL)) \
		) \
	},
	{
		/* UART0 -> uart0_txd -> E16 */
		PIN_UART0_TXD, 0, \
		( \
			PIN_MODE(0) | \
			((PIN_PULL_UD_EN) & (~PIN_PULL_TYPE_SEL & ~PIN_RX_ACTIVE)) \
		) \
	},
	{PINMUX_INVALID_PIN}
};

static pinmuxModuleCfg_t gUartPinCfg[] = 
{
    {0, TRUE, gUart0PinCfg},
    {CHIPDB_INVALID_INSTANCE_NUM}
};

#endif /* if defined(BUILDCFG_MOD_UART) */

#if defined(BUILDCFG_MOD_I2C)

static pinmuxPerCfg_t gI2c2PinCfg[] =
{
    {
        /* I2C2 -> I2C2_SCL -> E16 */
        PIN_UART0_TXD, 0, \
        ( \
            PIN_MODE(3) | \
            ((PIN_PULL_UD_EN | PIN_RX_ACTIVE) & (~PIN_PULL_TYPE_SEL)) \
        ) \
    },
    {
        /* I2C2 -> I2C2_SDA -> E15 */
        PIN_UART0_RXD, 0, \
        ( \
            PIN_MODE(3) | \
            ((PIN_PULL_UD_EN | PIN_RX_ACTIVE) & (~PIN_PULL_TYPE_SEL)) \
        ) \
    },
    {PINMUX_INVALID_PIN}
};

static pinmuxModuleCfg_t gI2cPinCfg[] =
{
    {2, TRUE, gI2c2PinCfg},
    {CHIPDB_INVALID_INSTANCE_NUM}
};

#endif /* if defined(BUILDCFG_MOD_I2C) */


/** EVM pin configurations for EVM */

pinmuxBoardCfg_t gGper301PinmuxData[] =
{
#if defined(BUILDCFG_MOD_DEBUGSS)
	{CHIPDB_MOD_ID_DEBUGSS, gDebugssPinCfg},
#endif /* if defined(BUILDCFG_MOD_DEBUGSS) */
#if defined(BUILDCFG_MOD_EMIF)
	{CHIPDB_MOD_ID_EMIF, gEmifPinCfg},
#endif /* if defined(BUILDCFG_MOD_EMIF) */
#if defined(BUILDCFG_MOD_RTC)
	{CHIPDB_MOD_ID_RTC, gRtcPinCfg},
#endif /* if defined(BUILDCFG_MOD_RTC) */
#if defined(BUILDCFG_MOD_GPIO)
	{CHIPDB_MOD_ID_GPIO, gGpioPinCfg},
#endif /* if defined(BUILDCFG_MOD_GPIO) */
#if defined(BUILDCFG_MOD_ADC)
	{CHIPDB_MOD_ID_ADC0, gAdcPinCfg},
#endif /* if defined(BUILDCFG_MOD_ADC) */
#if defined(BUILDCFG_MOD_MCASP)
	{CHIPDB_MOD_ID_MCASP, gMcaspPinCfg},
#endif /* if defined(BUILDCFG_MOD_MCASP) */
#if defined(BUILDCFG_MOD_GLUE)
	{CHIPDB_MOD_ID_GLUE, gGluePinCfg},
#endif /* if defined(BUILDCFG_MOD_GLUE) */
#if defined(BUILDCFG_MOD_TEST)
	{CHIPDB_MOD_ID_TEST, gTestPinCfg},
#endif /* if defined(BUILDCFG_MOD_TEST) */
#if defined(BUILDCFG_MOD_OSC)
	{CHIPDB_MOD_ID_OSC, gOscPinCfg},
#endif /* if defined(BUILDCFG_MOD_OSC) */
#if defined(BUILDCFG_MOD_LCDC)
	{CHIPDB_MOD_ID_LCDC, gLcdcPinCfg},
#endif /* if defined(BUILDCFG_MOD_LCDC) */
#if defined(BUILDCFG_MOD_PWMSS)
	{CHIPDB_MOD_ID_PWMSS, gPwmssPinCfg},
#endif /* if defined(BUILDCFG_MOD_PWMSS) */
#if defined(BUILDCFG_MOD_MMCSD)
	{CHIPDB_MOD_ID_MMCSD, gMmcsdPinCfg},
#endif /* if defined(BUILDCFG_MOD_MMCSD) */
#if defined(BUILDCFG_MOD_USB)
	{CHIPDB_MOD_ID_USB, gUsbPinCfg},
#endif /* if defined(BUILDCFG_MOD_USB) */
#if defined(BUILDCFG_MOD_SPI)
	{CHIPDB_MOD_ID_MCSPI, gSpiPinCfg},
#endif /* if defined(BUILDCFG_MOD_SPI) */
#if defined(BUILDCFG_MOD_UART)
	{CHIPDB_MOD_ID_UART, gUartPinCfg},
#endif /* if defined(BUILDCFG_MOD_UART) */
#if defined(BUILDCFG_MOD_I2C)
    {CHIPDB_MOD_ID_I2C, gI2cPinCfg},
#endif /* if defined(BUILDCFG_MOD_I2C) */
    {CHIPDB_MOD_ID_INVALID}
};

